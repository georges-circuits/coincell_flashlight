ARM GAS  /tmp/ccOpEGMe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemClock_Config,"ax",%progbits
  20              		.align	2
  21              		.global	SystemClock_Config
  22              		.code	16
  23              		.thumb_func
  25              	SystemClock_Config:
  26              	.LFB35:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** #include "adc.h"
  24:Core/Src/main.c **** #include "tim.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END Includes */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccOpEGMe.s 			page 2


  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief System Clock Configuration
  71:Core/Src/main.c ****   * @retval None
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** void SystemClock_Config(void)
  74:Core/Src/main.c **** {
  28              		.loc 1 74 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 64
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 90B0     		sub	sp, sp, #64
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 72
  75:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  40              		.loc 1 75 0
ARM GAS  /tmp/ccOpEGMe.s 			page 3


  41 0004 3022     		movs	r2, #48
  42 0006 0021     		movs	r1, #0
  43 0008 04A8     		add	r0, sp, #16
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
  76:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  46              		.loc 1 76 0
  47 000e 1024     		movs	r4, #16
  48 0010 1022     		movs	r2, #16
  49 0012 0021     		movs	r1, #0
  50 0014 6846     		mov	r0, sp
  51 0016 FFF7FEFF 		bl	memset
  52              	.LVL1:
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
  79:Core/Src/main.c ****   */
  80:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14;
  53              		.loc 1 80 0
  54 001a 1223     		movs	r3, #18
  55 001c 0493     		str	r3, [sp, #16]
  81:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  56              		.loc 1 81 0
  57 001e 113B     		subs	r3, r3, #17
  58 0020 0793     		str	r3, [sp, #28]
  82:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
  59              		.loc 1 82 0
  60 0022 0993     		str	r3, [sp, #36]
  83:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  61              		.loc 1 83 0
  62 0024 0894     		str	r4, [sp, #32]
  84:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
  63              		.loc 1 84 0
  64 0026 0A94     		str	r4, [sp, #40]
  85:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  86:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  65              		.loc 1 86 0
  66 0028 04A8     		add	r0, sp, #16
  67 002a FFF7FEFF 		bl	HAL_RCC_OscConfig
  68              	.LVL2:
  87:Core/Src/main.c ****   {
  88:Core/Src/main.c ****     Error_Handler();
  89:Core/Src/main.c ****   }
  90:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
  91:Core/Src/main.c ****   */
  92:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  69              		.loc 1 92 0
  70 002e 0723     		movs	r3, #7
  71 0030 0093     		str	r3, [sp]
  93:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
  94:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
  72              		.loc 1 94 0
  73 0032 0023     		movs	r3, #0
  74 0034 0193     		str	r3, [sp, #4]
  95:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV8;
  75              		.loc 1 95 0
  76 0036 A022     		movs	r2, #160
  77 0038 0292     		str	r2, [sp, #8]
ARM GAS  /tmp/ccOpEGMe.s 			page 4


  96:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  78              		.loc 1 96 0
  79 003a 0393     		str	r3, [sp, #12]
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
  80              		.loc 1 98 0
  81 003c 0021     		movs	r1, #0
  82 003e 6846     		mov	r0, sp
  83 0040 FFF7FEFF 		bl	HAL_RCC_ClockConfig
  84              	.LVL3:
  99:Core/Src/main.c ****   {
 100:Core/Src/main.c ****     Error_Handler();
 101:Core/Src/main.c ****   }
 102:Core/Src/main.c **** }
  85              		.loc 1 102 0
  86 0044 10B0     		add	sp, sp, #64
  87              		@ sp needed
  88 0046 10BD     		pop	{r4, pc}
  89              		.cfi_endproc
  90              	.LFE35:
  92              		.section	.text.Error_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	Error_Handler
  95              		.code	16
  96              		.thumb_func
  98              	Error_Handler:
  99              	.LFB36:
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* USER CODE END 4 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /**
 109:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 110:Core/Src/main.c ****   * @retval None
 111:Core/Src/main.c ****   */
 112:Core/Src/main.c **** void Error_Handler(void)
 113:Core/Src/main.c **** {
 100              		.loc 1 113 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 114:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 115:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 118:Core/Src/main.c **** }
 105              		.loc 1 118 0
 106              		@ sp needed
 107 0000 7047     		bx	lr
 108              		.cfi_endproc
 109              	.LFE36:
 111 0002 C046     		.text
 112              	.Letext0:
 113              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 114              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccOpEGMe.s 			page 5


 115              		.file 4 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 116              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
ARM GAS  /tmp/ccOpEGMe.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccOpEGMe.s:20     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccOpEGMe.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccOpEGMe.s:93     .text.Error_Handler:0000000000000000 $t
     /tmp/ccOpEGMe.s:98     .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
